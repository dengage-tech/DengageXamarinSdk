//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Dengage.Sdk.Manager.Rfm {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.dengage.sdk.manager.rfm']/class[@name='RFMManager']"
	[global::Android.Runtime.Register ("com/dengage/sdk/manager/rfm/RFMManager", DoNotGenerateAcw=true)]
	public sealed partial class RFMManager : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/dengage/sdk/manager/rfm/RFMManager", typeof (RFMManager));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal RFMManager (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.dengage.sdk.manager.rfm']/class[@name='RFMManager']/constructor[@name='RFMManager' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe RFMManager () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.manager.rfm']/class[@name='RFMManager']/method[@name='categoryView' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("categoryView", "(Ljava/lang/String;)V", "")]
		public unsafe void CategoryView (string categoryId)
		{
			const string __id = "categoryView.(Ljava/lang/String;)V";
			IntPtr native_categoryId = JNIEnv.NewString ((string)categoryId);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_categoryId);
				_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_categoryId);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.manager.rfm']/class[@name='RFMManager']/method[@name='saveRFMScores' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;com.dengage.sdk.domain.rfm.model.RFMScore&gt;']]"
		[Register ("saveRFMScores", "(Ljava/util/List;)V", "")]
		public unsafe void SaveRFMScores (global::System.Collections.Generic.IList<global::Com.Dengage.Sdk.Domain.Rfm.Model.RFMScore> scores)
		{
			const string __id = "saveRFMScores.(Ljava/util/List;)V";
			IntPtr native_scores = global::Android.Runtime.JavaList<global::Com.Dengage.Sdk.Domain.Rfm.Model.RFMScore>.ToLocalJniHandle (scores);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_scores);
				_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_scores);
				global::System.GC.KeepAlive (scores);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.manager.rfm']/class[@name='RFMManager']/method[@name='sortRFMItems' and count(parameter)=2 and parameter[1][@type='com.dengage.sdk.domain.rfm.model.RFMGender'] and parameter[2][@type='java.util.List&lt;com.dengage.sdk.domain.rfm.model.RFMItem&gt;']]"
		[Register ("sortRFMItems", "(Lcom/dengage/sdk/domain/rfm/model/RFMGender;Ljava/util/List;)Ljava/util/List;", "")]
		[global::Java.Interop.JavaTypeParameters (new string [] {"T"})]
		public unsafe global::System.Collections.IList SortRFMItems (global::Com.Dengage.Sdk.Domain.Rfm.Model.RFMGender rfmGender, global::System.Collections.Generic.IList<global::Com.Dengage.Sdk.Domain.Rfm.Model.RFMItem> rfmItems)
		{
			const string __id = "sortRFMItems.(Lcom/dengage/sdk/domain/rfm/model/RFMGender;Ljava/util/List;)Ljava/util/List;";
			IntPtr native_rfmItems = global::Android.Runtime.JavaList<global::Com.Dengage.Sdk.Domain.Rfm.Model.RFMItem>.ToLocalJniHandle (rfmItems);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((rfmGender == null) ? IntPtr.Zero : ((global::Java.Lang.Object) rfmGender).Handle);
				__args [1] = new JniArgumentValue (native_rfmItems);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return global::Android.Runtime.JavaList.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_rfmItems);
				global::System.GC.KeepAlive (rfmGender);
				global::System.GC.KeepAlive (rfmItems);
			}
		}

	}
}
