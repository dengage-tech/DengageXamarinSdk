//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Dengage.Sdk.Manager.Base {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.dengage.sdk.manager.base']/class[@name='BaseAbstractPresenter']"
	[global::Android.Runtime.Register ("com/dengage/sdk/manager/base/BaseAbstractPresenter", DoNotGenerateAcw=true)]
	[global::Java.Interop.JavaTypeParameters (new string [] {"View extends com.dengage.sdk.manager.base.BaseView"})]
	public abstract partial class BaseAbstractPresenter : global::Java.Lang.Object, global::Com.Dengage.Sdk.Domain.Base.IUseCaseRunner, global::Com.Dengage.Sdk.Manager.Base.IBasePresenter {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/dengage/sdk/manager/base/BaseAbstractPresenter", typeof (BaseAbstractPresenter));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected BaseAbstractPresenter (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.dengage.sdk.manager.base']/class[@name='BaseAbstractPresenter']/constructor[@name='BaseAbstractPresenter' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe BaseAbstractPresenter () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_isViewAttached;
#pragma warning disable 0169
		static Delegate GetIsViewAttachedHandler ()
		{
			if (cb_isViewAttached == null)
				cb_isViewAttached = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsViewAttached));
			return cb_isViewAttached;
		}

		static bool n_IsViewAttached (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.Base.BaseAbstractPresenter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.IsViewAttached;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsViewAttached {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.manager.base']/class[@name='BaseAbstractPresenter']/method[@name='isViewAttached' and count(parameter)=0]"
			[Register ("isViewAttached", "()Z", "GetIsViewAttachedHandler")]
			get {
				const string __id = "isViewAttached.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getView;
#pragma warning disable 0169
		static Delegate GetGetViewHandler ()
		{
			if (cb_getView == null)
				cb_getView = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetView));
			return cb_getView;
		}

		static IntPtr n_GetView (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.Base.BaseAbstractPresenter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.View);
		}
#pragma warning restore 0169

		public virtual unsafe global::Java.Lang.Object View {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.manager.base']/class[@name='BaseAbstractPresenter']/method[@name='getView' and count(parameter)=0]"
			[Register ("getView", "()Lcom/dengage/sdk/manager/base/BaseView;", "GetGetViewHandler")]
			get {
				const string __id = "getView.()Lcom/dengage/sdk/manager/base/BaseView;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return (global::Java.Lang.Object) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getViewIfIsAttached;
#pragma warning disable 0169
		static Delegate GetGetViewIfIsAttachedHandler ()
		{
			if (cb_getViewIfIsAttached == null)
				cb_getViewIfIsAttached = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetViewIfIsAttached));
			return cb_getViewIfIsAttached;
		}

		static IntPtr n_GetViewIfIsAttached (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.Base.BaseAbstractPresenter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.ViewIfIsAttached);
		}
#pragma warning restore 0169

		public virtual unsafe global::Java.Lang.Object ViewIfIsAttached {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.manager.base']/class[@name='BaseAbstractPresenter']/method[@name='getViewIfIsAttached' and count(parameter)=0]"
			[Register ("getViewIfIsAttached", "()Lcom/dengage/sdk/manager/base/BaseView;", "GetGetViewIfIsAttachedHandler")]
			get {
				const string __id = "getViewIfIsAttached.()Lcom/dengage/sdk/manager/base/BaseView;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return (global::Java.Lang.Object) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_attachView_Lcom_dengage_sdk_manager_base_BaseView_;
#pragma warning disable 0169
		static Delegate GetAttachView_Lcom_dengage_sdk_manager_base_BaseView_Handler ()
		{
			if (cb_attachView_Lcom_dengage_sdk_manager_base_BaseView_ == null)
				cb_attachView_Lcom_dengage_sdk_manager_base_BaseView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AttachView_Lcom_dengage_sdk_manager_base_BaseView_));
			return cb_attachView_Lcom_dengage_sdk_manager_base_BaseView_;
		}

		static void n_AttachView_Lcom_dengage_sdk_manager_base_BaseView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_view)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.Base.BaseAbstractPresenter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var view = (global::Com.Dengage.Sdk.Manager.Base.IBaseView)global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.Base.IBaseView> (native_view, JniHandleOwnership.DoNotTransfer);
			__this.AttachView (view);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.manager.base']/class[@name='BaseAbstractPresenter']/method[@name='attachView' and count(parameter)=1 and parameter[1][@type='com.dengage.sdk.manager.base.BaseView']]"
		[Register ("attachView", "(Lcom/dengage/sdk/manager/base/BaseView;)V", "GetAttachView_Lcom_dengage_sdk_manager_base_BaseView_Handler")]
		public virtual unsafe void AttachView (global::Com.Dengage.Sdk.Manager.Base.IBaseView view)
		{
			const string __id = "attachView.(Lcom/dengage/sdk/manager/base/BaseView;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((view == null) ? IntPtr.Zero : ((global::Java.Lang.Object) view).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (view);
			}
		}

		static Delegate cb_cancelUseCases;
#pragma warning disable 0169
		static Delegate GetCancelUseCasesHandler ()
		{
			if (cb_cancelUseCases == null)
				cb_cancelUseCases = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_CancelUseCases));
			return cb_cancelUseCases;
		}

		static void n_CancelUseCases (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.Base.BaseAbstractPresenter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.CancelUseCases ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.manager.base']/class[@name='BaseAbstractPresenter']/method[@name='cancelUseCases' and count(parameter)=0]"
		[Register ("cancelUseCases", "()V", "GetCancelUseCasesHandler")]
		public virtual unsafe void CancelUseCases ()
		{
			const string __id = "cancelUseCases.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_detachView;
#pragma warning disable 0169
		static Delegate GetDetachViewHandler ()
		{
			if (cb_detachView == null)
				cb_detachView = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DetachView));
			return cb_detachView;
		}

		static void n_DetachView (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.Base.BaseAbstractPresenter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.DetachView ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.manager.base']/class[@name='BaseAbstractPresenter']/method[@name='detachView' and count(parameter)=0]"
		[Register ("detachView", "()V", "GetDetachViewHandler")]
		public virtual unsafe void DetachView ()
		{
			const string __id = "detachView.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_onViewAttached;
#pragma warning disable 0169
		static Delegate GetOnViewAttachedHandler ()
		{
			if (cb_onViewAttached == null)
				cb_onViewAttached = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnViewAttached));
			return cb_onViewAttached;
		}

		static void n_OnViewAttached (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.Base.BaseAbstractPresenter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.OnViewAttached ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.manager.base']/class[@name='BaseAbstractPresenter']/method[@name='onViewAttached' and count(parameter)=0]"
		[Register ("onViewAttached", "()V", "GetOnViewAttachedHandler")]
		protected virtual unsafe void OnViewAttached ()
		{
			const string __id = "onViewAttached.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.manager.base']/class[@name='BaseAbstractPresenter']/method[@name='onViewDetached' and count(parameter)=0]"
		[Register ("onViewDetached", "()V", "")]
		public unsafe void OnViewDetached ()
		{
			const string __id = "onViewDetached.()V";
			try {
				_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

	}

	[global::Android.Runtime.Register ("com/dengage/sdk/manager/base/BaseAbstractPresenter", DoNotGenerateAcw=true)]
	internal partial class BaseAbstractPresenterInvoker : BaseAbstractPresenter, global::Com.Dengage.Sdk.Manager.Base.IBasePresenter {
		public BaseAbstractPresenterInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/dengage/sdk/manager/base/BaseAbstractPresenter", typeof (BaseAbstractPresenterInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

	}
}
