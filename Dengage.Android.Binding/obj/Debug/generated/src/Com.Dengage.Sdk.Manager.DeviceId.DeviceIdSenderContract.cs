//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Dengage.Sdk.Manager.DeviceId {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.dengage.sdk.manager.deviceId']/class[@name='DeviceIdSenderContract']"
	[global::Android.Runtime.Register ("com/dengage/sdk/manager/deviceId/DeviceIdSenderContract", DoNotGenerateAcw=true)]
	public sealed partial class DeviceIdSenderContract : global::Java.Lang.Object {
		// Metadata.xml XPath interface reference: path="/api/package[@name='com.dengage.sdk.manager.deviceId']/interface[@name='DeviceIdSenderContract.Presenter']"
		[Register ("com/dengage/sdk/manager/deviceId/DeviceIdSenderContract$Presenter", "", "Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract/IPresenterInvoker")]
		public partial interface IPresenter : global::Com.Dengage.Sdk.Manager.Base.IBasePresenter {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.manager.deviceId']/interface[@name='DeviceIdSenderContract.Presenter']/method[@name='sendDeviceId' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
			[Register ("sendDeviceId", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetSendDeviceId_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler:Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract/IPresenterInvoker, Dengage.Android.Binding")]
			void SendDeviceId (string route, string token, string deviceId);

		}

		[global::Android.Runtime.Register ("com/dengage/sdk/manager/deviceId/DeviceIdSenderContract$Presenter", DoNotGenerateAcw=true)]
		internal partial class IPresenterInvoker : global::Java.Lang.Object, IPresenter {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/dengage/sdk/manager/deviceId/DeviceIdSenderContract$Presenter", typeof (IPresenterInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IPresenter GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IPresenter> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.dengage.sdk.manager.deviceId.DeviceIdSenderContract.Presenter'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IPresenterInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_sendDeviceId_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetSendDeviceId_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler ()
			{
				if (cb_sendDeviceId_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ == null)
					cb_sendDeviceId_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_V (n_SendDeviceId_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_));
				return cb_sendDeviceId_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
			}

			static void n_SendDeviceId_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_route, IntPtr native_token, IntPtr native_deviceId)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract.IPresenter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var route = JNIEnv.GetString (native_route, JniHandleOwnership.DoNotTransfer);
				var token = JNIEnv.GetString (native_token, JniHandleOwnership.DoNotTransfer);
				var deviceId = JNIEnv.GetString (native_deviceId, JniHandleOwnership.DoNotTransfer);
				__this.SendDeviceId (route, token, deviceId);
			}
#pragma warning restore 0169

			IntPtr id_sendDeviceId_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_;
			public unsafe void SendDeviceId (string route, string token, string deviceId)
			{
				if (id_sendDeviceId_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ == IntPtr.Zero)
					id_sendDeviceId_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "sendDeviceId", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V");
				IntPtr native_route = JNIEnv.NewString ((string)route);
				IntPtr native_token = JNIEnv.NewString ((string)token);
				IntPtr native_deviceId = JNIEnv.NewString ((string)deviceId);
				JValue* __args = stackalloc JValue [3];
				__args [0] = new JValue (native_route);
				__args [1] = new JValue (native_token);
				__args [2] = new JValue (native_deviceId);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_sendDeviceId_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_route);
				JNIEnv.DeleteLocalRef (native_token);
				JNIEnv.DeleteLocalRef (native_deviceId);
			}

			static Delegate cb_isViewAttached;
#pragma warning disable 0169
			static Delegate GetIsViewAttachedHandler ()
			{
				if (cb_isViewAttached == null)
					cb_isViewAttached = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsViewAttached));
				return cb_isViewAttached;
			}

			static bool n_IsViewAttached (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract.IPresenter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return __this.IsViewAttached;
			}
#pragma warning restore 0169

			IntPtr id_isViewAttached;
			public unsafe bool IsViewAttached {
				get {
					if (id_isViewAttached == IntPtr.Zero)
						id_isViewAttached = JNIEnv.GetMethodID (class_ref, "isViewAttached", "()Z");
					return JNIEnv.CallBooleanMethod (((global::Java.Lang.Object) this).Handle, id_isViewAttached);
				}
			}

			static Delegate cb_getView;
#pragma warning disable 0169
			static Delegate GetGetViewHandler ()
			{
				if (cb_getView == null)
					cb_getView = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetView));
				return cb_getView;
			}

			static IntPtr n_GetView (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract.IPresenter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.ToLocalJniHandle (__this.View);
			}
#pragma warning restore 0169

			IntPtr id_getView;
			public unsafe global::Java.Lang.Object View {
				get {
					if (id_getView == IntPtr.Zero)
						id_getView = JNIEnv.GetMethodID (class_ref, "getView", "()Lcom/dengage/sdk/manager/base/BaseView;");
					return (global::Java.Lang.Object) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (JNIEnv.CallObjectMethod (((global::Java.Lang.Object) this).Handle, id_getView), JniHandleOwnership.TransferLocalRef);
				}
			}

			static Delegate cb_getViewIfIsAttached;
#pragma warning disable 0169
			static Delegate GetGetViewIfIsAttachedHandler ()
			{
				if (cb_getViewIfIsAttached == null)
					cb_getViewIfIsAttached = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetViewIfIsAttached));
				return cb_getViewIfIsAttached;
			}

			static IntPtr n_GetViewIfIsAttached (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract.IPresenter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				return JNIEnv.ToLocalJniHandle (__this.ViewIfIsAttached);
			}
#pragma warning restore 0169

			IntPtr id_getViewIfIsAttached;
			public unsafe global::Java.Lang.Object ViewIfIsAttached {
				get {
					if (id_getViewIfIsAttached == IntPtr.Zero)
						id_getViewIfIsAttached = JNIEnv.GetMethodID (class_ref, "getViewIfIsAttached", "()Lcom/dengage/sdk/manager/base/BaseView;");
					return (global::Java.Lang.Object) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (JNIEnv.CallObjectMethod (((global::Java.Lang.Object) this).Handle, id_getViewIfIsAttached), JniHandleOwnership.TransferLocalRef);
				}
			}

			static Delegate cb_attachView_Lcom_dengage_sdk_manager_base_BaseView_;
#pragma warning disable 0169
			static Delegate GetAttachView_Lcom_dengage_sdk_manager_base_BaseView_Handler ()
			{
				if (cb_attachView_Lcom_dengage_sdk_manager_base_BaseView_ == null)
					cb_attachView_Lcom_dengage_sdk_manager_base_BaseView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AttachView_Lcom_dengage_sdk_manager_base_BaseView_));
				return cb_attachView_Lcom_dengage_sdk_manager_base_BaseView_;
			}

			static void n_AttachView_Lcom_dengage_sdk_manager_base_BaseView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_view)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract.IPresenter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var view = (global::Com.Dengage.Sdk.Manager.Base.IBaseView)global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.Base.IBaseView> (native_view, JniHandleOwnership.DoNotTransfer);
				__this.AttachView (view);
			}
#pragma warning restore 0169

			IntPtr id_attachView_Lcom_dengage_sdk_manager_base_BaseView_;
			public unsafe void AttachView (global::Com.Dengage.Sdk.Manager.Base.IBaseView view)
			{
				if (id_attachView_Lcom_dengage_sdk_manager_base_BaseView_ == IntPtr.Zero)
					id_attachView_Lcom_dengage_sdk_manager_base_BaseView_ = JNIEnv.GetMethodID (class_ref, "attachView", "(Lcom/dengage/sdk/manager/base/BaseView;)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((view == null) ? IntPtr.Zero : ((global::Java.Lang.Object) view).Handle);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_attachView_Lcom_dengage_sdk_manager_base_BaseView_, __args);
			}

			static Delegate cb_detachView;
#pragma warning disable 0169
			static Delegate GetDetachViewHandler ()
			{
				if (cb_detachView == null)
					cb_detachView = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DetachView));
				return cb_detachView;
			}

			static void n_DetachView (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract.IPresenter> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				__this.DetachView ();
			}
#pragma warning restore 0169

			IntPtr id_detachView;
			public unsafe void DetachView ()
			{
				if (id_detachView == IntPtr.Zero)
					id_detachView = JNIEnv.GetMethodID (class_ref, "detachView", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_detachView);
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.dengage.sdk.manager.deviceId']/interface[@name='DeviceIdSenderContract.View']"
		[Register ("com/dengage/sdk/manager/deviceId/DeviceIdSenderContract$View", "", "Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract/IViewInvoker")]
		public partial interface IView : global::Com.Dengage.Sdk.Manager.Base.IBaseView {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.manager.deviceId']/interface[@name='DeviceIdSenderContract.View']/method[@name='deviceIdSent' and count(parameter)=0]"
			[Register ("deviceIdSent", "()V", "GetDeviceIdSentHandler:Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract/IViewInvoker, Dengage.Android.Binding")]
			void DeviceIdSent ();

		}

		[global::Android.Runtime.Register ("com/dengage/sdk/manager/deviceId/DeviceIdSenderContract$View", DoNotGenerateAcw=true)]
		internal partial class IViewInvoker : global::Java.Lang.Object, IView {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/dengage/sdk/manager/deviceId/DeviceIdSenderContract$View", typeof (IViewInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IView GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IView> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.dengage.sdk.manager.deviceId.DeviceIdSenderContract.View'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IViewInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_deviceIdSent;
#pragma warning disable 0169
			static Delegate GetDeviceIdSentHandler ()
			{
				if (cb_deviceIdSent == null)
					cb_deviceIdSent = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DeviceIdSent));
				return cb_deviceIdSent;
			}

			static void n_DeviceIdSent (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract.IView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				__this.DeviceIdSent ();
			}
#pragma warning restore 0169

			IntPtr id_deviceIdSent;
			public unsafe void DeviceIdSent ()
			{
				if (id_deviceIdSent == IntPtr.Zero)
					id_deviceIdSent = JNIEnv.GetMethodID (class_ref, "deviceIdSent", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_deviceIdSent);
			}

			static Delegate cb_hideLoading;
#pragma warning disable 0169
			static Delegate GetHideLoadingHandler ()
			{
				if (cb_hideLoading == null)
					cb_hideLoading = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_HideLoading));
				return cb_hideLoading;
			}

			static void n_HideLoading (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract.IView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				__this.HideLoading ();
			}
#pragma warning restore 0169

			IntPtr id_hideLoading;
			public unsafe void HideLoading ()
			{
				if (id_hideLoading == IntPtr.Zero)
					id_hideLoading = JNIEnv.GetMethodID (class_ref, "hideLoading", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_hideLoading);
			}

			static Delegate cb_showError_Ljava_lang_Throwable_;
#pragma warning disable 0169
			static Delegate GetShowError_Ljava_lang_Throwable_Handler ()
			{
				if (cb_showError_Ljava_lang_Throwable_ == null)
					cb_showError_Ljava_lang_Throwable_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ShowError_Ljava_lang_Throwable_));
				return cb_showError_Ljava_lang_Throwable_;
			}

			static void n_ShowError_Ljava_lang_Throwable_ (IntPtr jnienv, IntPtr native__this, IntPtr native_error)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract.IView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var error = global::Java.Lang.Object.GetObject<global::Java.Lang.Throwable> (native_error, JniHandleOwnership.DoNotTransfer);
				__this.ShowError (error);
			}
#pragma warning restore 0169

			IntPtr id_showError_Ljava_lang_Throwable_;
			public unsafe void ShowError (global::Java.Lang.Throwable error)
			{
				if (id_showError_Ljava_lang_Throwable_ == IntPtr.Zero)
					id_showError_Ljava_lang_Throwable_ = JNIEnv.GetMethodID (class_ref, "showError", "(Ljava/lang/Throwable;)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((error == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) error).Handle);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_showError_Ljava_lang_Throwable_, __args);
			}

			static Delegate cb_showLoading;
#pragma warning disable 0169
			static Delegate GetShowLoadingHandler ()
			{
				if (cb_showLoading == null)
					cb_showLoading = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_ShowLoading));
				return cb_showLoading;
			}

			static void n_ShowLoading (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Manager.DeviceId.DeviceIdSenderContract.IView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				__this.ShowLoading ();
			}
#pragma warning restore 0169

			IntPtr id_showLoading;
			public unsafe void ShowLoading ()
			{
				if (id_showLoading == IntPtr.Zero)
					id_showLoading = JNIEnv.GetMethodID (class_ref, "showLoading", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_showLoading);
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/dengage/sdk/manager/deviceId/DeviceIdSenderContract", typeof (DeviceIdSenderContract));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal DeviceIdSenderContract (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.dengage.sdk.manager.deviceId']/class[@name='DeviceIdSenderContract']/constructor[@name='DeviceIdSenderContract' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe DeviceIdSenderContract () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

	}
}
