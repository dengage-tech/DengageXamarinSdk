//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Dengage.Sdk.Data.Remote.Error {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError']"
	[global::Android.Runtime.Register ("com/dengage/sdk/data/remote/error/DengageApiError", DoNotGenerateAcw=true)]
	public sealed partial class DengageApiError : global::Java.Lang.RuntimeException {
		// Metadata.xml XPath class reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError.Companion']"
		[global::Android.Runtime.Register ("com/dengage/sdk/data/remote/error/DengageApiError$Companion", DoNotGenerateAcw=true)]
		public sealed partial class Companion : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/dengage/sdk/data/remote/error/DengageApiError$Companion", typeof (Companion));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal Companion (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError.Companion']/method[@name='apiError' and count(parameter)=4 and parameter[1][@type='java.lang.Throwable'] and parameter[2][@type='java.lang.Integer'] and parameter[3][@type='java.lang.Object'] and parameter[4][@type='java.lang.String']]"
			[Register ("apiError", "(Ljava/lang/Throwable;Ljava/lang/Integer;Ljava/lang/Object;Ljava/lang/String;)Lcom/dengage/sdk/data/remote/error/DengageApiError;", "")]
			public unsafe global::Com.Dengage.Sdk.Data.Remote.Error.DengageApiError ApiError (global::Java.Lang.Throwable throwable, global::Java.Lang.Integer statusCode, global::Java.Lang.Object errorCode, string errorMessage)
			{
				const string __id = "apiError.(Ljava/lang/Throwable;Ljava/lang/Integer;Ljava/lang/Object;Ljava/lang/String;)Lcom/dengage/sdk/data/remote/error/DengageApiError;";
				IntPtr native_errorMessage = JNIEnv.NewString ((string)errorMessage);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [4];
					__args [0] = new JniArgumentValue ((throwable == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) throwable).Handle);
					__args [1] = new JniArgumentValue ((statusCode == null) ? IntPtr.Zero : ((global::Java.Lang.Object) statusCode).Handle);
					__args [2] = new JniArgumentValue ((errorCode == null) ? IntPtr.Zero : ((global::Java.Lang.Object) errorCode).Handle);
					__args [3] = new JniArgumentValue (native_errorMessage);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Data.Remote.Error.DengageApiError> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_errorMessage);
					global::System.GC.KeepAlive (throwable);
					global::System.GC.KeepAlive (statusCode);
					global::System.GC.KeepAlive (errorCode);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError.Companion']/method[@name='connectionError' and count(parameter)=1 and parameter[1][@type='java.lang.Throwable']]"
			[Register ("connectionError", "(Ljava/lang/Throwable;)Lcom/dengage/sdk/data/remote/error/DengageApiError;", "")]
			public unsafe global::Com.Dengage.Sdk.Data.Remote.Error.DengageApiError ConnectionError (global::Java.Lang.Throwable throwable)
			{
				const string __id = "connectionError.(Ljava/lang/Throwable;)Lcom/dengage/sdk/data/remote/error/DengageApiError;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((throwable == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) throwable).Handle);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Data.Remote.Error.DengageApiError> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					global::System.GC.KeepAlive (throwable);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError.Companion']/method[@name='serverError' and count(parameter)=2 and parameter[1][@type='java.lang.Throwable'] and parameter[2][@type='java.lang.Integer']]"
			[Register ("serverError", "(Ljava/lang/Throwable;Ljava/lang/Integer;)Lcom/dengage/sdk/data/remote/error/DengageApiError;", "")]
			public unsafe global::Com.Dengage.Sdk.Data.Remote.Error.DengageApiError ServerError (global::Java.Lang.Throwable throwable, global::Java.Lang.Integer statusCode)
			{
				const string __id = "serverError.(Ljava/lang/Throwable;Ljava/lang/Integer;)Lcom/dengage/sdk/data/remote/error/DengageApiError;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((throwable == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) throwable).Handle);
					__args [1] = new JniArgumentValue ((statusCode == null) ? IntPtr.Zero : ((global::Java.Lang.Object) statusCode).Handle);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Data.Remote.Error.DengageApiError> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					global::System.GC.KeepAlive (throwable);
					global::System.GC.KeepAlive (statusCode);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError.Companion']/method[@name='timeOutError' and count(parameter)=1 and parameter[1][@type='java.lang.Throwable']]"
			[Register ("timeOutError", "(Ljava/lang/Throwable;)Lcom/dengage/sdk/data/remote/error/DengageApiError;", "")]
			public unsafe global::Com.Dengage.Sdk.Data.Remote.Error.DengageApiError TimeOutError (global::Java.Lang.Throwable throwable)
			{
				const string __id = "timeOutError.(Ljava/lang/Throwable;)Lcom/dengage/sdk/data/remote/error/DengageApiError;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((throwable == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) throwable).Handle);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Data.Remote.Error.DengageApiError> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					global::System.GC.KeepAlive (throwable);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError.Companion']/method[@name='unknownError' and count(parameter)=1 and parameter[1][@type='java.lang.Throwable']]"
			[Register ("unknownError", "(Ljava/lang/Throwable;)Lcom/dengage/sdk/data/remote/error/DengageApiError;", "")]
			public unsafe global::Com.Dengage.Sdk.Data.Remote.Error.DengageApiError UnknownError (global::Java.Lang.Throwable throwable)
			{
				const string __id = "unknownError.(Ljava/lang/Throwable;)Lcom/dengage/sdk/data/remote/error/DengageApiError;";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((throwable == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) throwable).Handle);
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
					return global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Data.Remote.Error.DengageApiError> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					global::System.GC.KeepAlive (throwable);
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/dengage/sdk/data/remote/error/DengageApiError", typeof (DengageApiError));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal DengageApiError (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError']/constructor[@name='DengageApiError' and count(parameter)=5 and parameter[1][@type='java.lang.Throwable'] and parameter[2][@type='com.dengage.sdk.data.remote.error.ErrorType'] and parameter[3][@type='java.lang.Integer'] and parameter[4][@type='java.lang.Object'] and parameter[5][@type='java.lang.String']]"
		[Register (".ctor", "(Ljava/lang/Throwable;Lcom/dengage/sdk/data/remote/error/ErrorType;Ljava/lang/Integer;Ljava/lang/Object;Ljava/lang/String;)V", "")]
		public unsafe DengageApiError (global::Java.Lang.Throwable throwable, global::Com.Dengage.Sdk.Data.Remote.Error.ErrorType errorType, global::Java.Lang.Integer statusCode, global::Java.Lang.Object errorCode, string errorMessage) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/Throwable;Lcom/dengage/sdk/data/remote/error/ErrorType;Ljava/lang/Integer;Ljava/lang/Object;Ljava/lang/String;)V";

			if (((global::Java.Lang.Throwable) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_errorMessage = JNIEnv.NewString ((string)errorMessage);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [5];
				__args [0] = new JniArgumentValue ((throwable == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) throwable).Handle);
				__args [1] = new JniArgumentValue ((errorType == null) ? IntPtr.Zero : ((global::Java.Lang.Object) errorType).Handle);
				__args [2] = new JniArgumentValue ((statusCode == null) ? IntPtr.Zero : ((global::Java.Lang.Object) statusCode).Handle);
				__args [3] = new JniArgumentValue ((errorCode == null) ? IntPtr.Zero : ((global::Java.Lang.Object) errorCode).Handle);
				__args [4] = new JniArgumentValue (native_errorMessage);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_errorMessage);
				global::System.GC.KeepAlive (throwable);
				global::System.GC.KeepAlive (errorType);
				global::System.GC.KeepAlive (statusCode);
				global::System.GC.KeepAlive (errorCode);
			}
		}

		public unsafe global::Java.Lang.Object ErrorCode {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError']/method[@name='getErrorCode' and count(parameter)=0]"
			[Register ("getErrorCode", "()Ljava/lang/Object;", "")]
			get {
				const string __id = "getErrorCode.()Ljava/lang/Object;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public unsafe string ErrorMessage {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError']/method[@name='getErrorMessage' and count(parameter)=0]"
			[Register ("getErrorMessage", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getErrorMessage.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public unsafe global::Com.Dengage.Sdk.Data.Remote.Error.ErrorType ErrorType {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError']/method[@name='getErrorType' and count(parameter)=0]"
			[Register ("getErrorType", "()Lcom/dengage/sdk/data/remote/error/ErrorType;", "")]
			get {
				const string __id = "getErrorType.()Lcom/dengage/sdk/data/remote/error/ErrorType;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Data.Remote.Error.ErrorType> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public unsafe global::Java.Lang.Integer StatusCode {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError']/method[@name='getStatusCode' and count(parameter)=0]"
			[Register ("getStatusCode", "()Ljava/lang/Integer;", "")]
			get {
				const string __id = "getStatusCode.()Ljava/lang/Integer;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Integer> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public unsafe global::Java.Lang.Throwable Throwable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError']/method[@name='getThrowable' and count(parameter)=0]"
			[Register ("getThrowable", "()Ljava/lang/Throwable;", "")]
			get {
				const string __id = "getThrowable.()Ljava/lang/Throwable;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.Throwable> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.data.remote.error']/class[@name='DengageApiError']/method[@name='toString' and count(parameter)=0]"
		[Register ("toString", "()Ljava/lang/String;", "")]
		public override unsafe string ToString ()
		{
			const string __id = "toString.()Ljava/lang/String;";
			try {
				var __rm = _members.InstanceMethods.InvokeAbstractObjectMethod (__id, this, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

	}
}
