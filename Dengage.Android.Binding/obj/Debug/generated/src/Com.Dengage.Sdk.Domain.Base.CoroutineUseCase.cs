//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Dengage.Sdk.Domain.Base {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.dengage.sdk.domain.base']/class[@name='CoroutineUseCase']"
	[global::Android.Runtime.Register ("com/dengage/sdk/domain/base/CoroutineUseCase", DoNotGenerateAcw=true)]
	[global::Java.Interop.JavaTypeParameters (new string [] {"T", "Params"})]
	public abstract partial class CoroutineUseCase : global::Java.Lang.Object, global::Com.Dengage.Sdk.Domain.Base.IBaseUseCase {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/dengage/sdk/domain/base/CoroutineUseCase", typeof (CoroutineUseCase));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected CoroutineUseCase (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.dengage.sdk.domain.base']/class[@name='CoroutineUseCase']/constructor[@name='CoroutineUseCase' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe CoroutineUseCase () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_cancel;
#pragma warning disable 0169
		static Delegate GetCancelHandler ()
		{
			if (cb_cancel == null)
				cb_cancel = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Cancel));
			return cb_cancel;
		}

		static void n_Cancel (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Domain.Base.CoroutineUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Cancel ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.domain.base']/class[@name='CoroutineUseCase']/method[@name='cancel' and count(parameter)=0]"
		[Register ("cancel", "()V", "GetCancelHandler")]
		public virtual unsafe void Cancel ()
		{
			const string __id = "cancel.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_execute_Lcom_dengage_sdk_domain_base_UseCaseRunner_Lcom_dengage_sdk_domain_base_Callback_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetExecute_Lcom_dengage_sdk_domain_base_UseCaseRunner_Lcom_dengage_sdk_domain_base_Callback_Ljava_lang_Object_Handler ()
		{
			if (cb_execute_Lcom_dengage_sdk_domain_base_UseCaseRunner_Lcom_dengage_sdk_domain_base_Callback_Ljava_lang_Object_ == null)
				cb_execute_Lcom_dengage_sdk_domain_base_UseCaseRunner_Lcom_dengage_sdk_domain_base_Callback_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLLL_V (n_Execute_Lcom_dengage_sdk_domain_base_UseCaseRunner_Lcom_dengage_sdk_domain_base_Callback_Ljava_lang_Object_));
			return cb_execute_Lcom_dengage_sdk_domain_base_UseCaseRunner_Lcom_dengage_sdk_domain_base_Callback_Ljava_lang_Object_;
		}

		static void n_Execute_Lcom_dengage_sdk_domain_base_UseCaseRunner_Lcom_dengage_sdk_domain_base_Callback_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_useCaseRunner, IntPtr native__callback, IntPtr native__params)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Domain.Base.CoroutineUseCase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var useCaseRunner = (global::Com.Dengage.Sdk.Domain.Base.IUseCaseRunner)global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Domain.Base.IUseCaseRunner> (native_useCaseRunner, JniHandleOwnership.DoNotTransfer);
			var @callback = global::Java.Lang.Object.GetObject<global::Com.Dengage.Sdk.Domain.Base.Callback> (native__callback, JniHandleOwnership.DoNotTransfer);
			var @params = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native__params, JniHandleOwnership.DoNotTransfer);
			__this.Execute (useCaseRunner, @callback, @params);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.dengage.sdk.domain.base']/class[@name='CoroutineUseCase']/method[@name='execute' and count(parameter)=3 and parameter[1][@type='com.dengage.sdk.domain.base.UseCaseRunner'] and parameter[2][@type='com.dengage.sdk.domain.base.Callback&lt;T&gt;'] and parameter[3][@type='Params']]"
		[Register ("execute", "(Lcom/dengage/sdk/domain/base/UseCaseRunner;Lcom/dengage/sdk/domain/base/Callback;Ljava/lang/Object;)V", "GetExecute_Lcom_dengage_sdk_domain_base_UseCaseRunner_Lcom_dengage_sdk_domain_base_Callback_Ljava_lang_Object_Handler")]
		public virtual unsafe void Execute (global::Com.Dengage.Sdk.Domain.Base.IUseCaseRunner useCaseRunner, global::Com.Dengage.Sdk.Domain.Base.Callback @callback, global::Java.Lang.Object @params)
		{
			const string __id = "execute.(Lcom/dengage/sdk/domain/base/UseCaseRunner;Lcom/dengage/sdk/domain/base/Callback;Ljava/lang/Object;)V";
			IntPtr native__params = JNIEnv.ToLocalJniHandle (@params);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((useCaseRunner == null) ? IntPtr.Zero : ((global::Java.Lang.Object) useCaseRunner).Handle);
				__args [1] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				__args [2] = new JniArgumentValue (native__params);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native__params);
				global::System.GC.KeepAlive (useCaseRunner);
				global::System.GC.KeepAlive (@callback);
				global::System.GC.KeepAlive (@params);
			}
		}

	}

	[global::Android.Runtime.Register ("com/dengage/sdk/domain/base/CoroutineUseCase", DoNotGenerateAcw=true)]
	internal partial class CoroutineUseCaseInvoker : CoroutineUseCase, global::Com.Dengage.Sdk.Domain.Base.IBaseUseCase {
		public CoroutineUseCaseInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/dengage/sdk/domain/base/CoroutineUseCase", typeof (CoroutineUseCaseInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

	}
}
